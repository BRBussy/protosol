syntax = "proto3";

package protosol.solana.program.token.v1;

import "protosol/solana/transaction/v1/instruction.proto";

option go_package = "github.com/BRBussy/protosol/lib/go/protosol/solana/program/token/v1;token_v1";

// Token Program service for creating SPL Token 2022 instructions
service Service {
  // Creates an InitialiseMint instruction for Token 2022 program
  rpc InitialiseMint(InitialiseMintRequest) returns (InitialiseMintResponse);
  
  // Gets current minimum rent for a token account (mint size)
  rpc GetCurrentMinRentForTokenAccount(GetCurrentMinRentForTokenAccountRequest) returns (GetCurrentMinRentForTokenAccountResponse);
  
  // Parses mint account data into structured format
  rpc ParseMint(ParseMintRequest) returns (ParseMintResponse);
}

// Request to create InitialiseMint instruction
message InitialiseMintRequest {
  string mint_pub_key = 1;
  string mint_authority_pub_key = 2;
  string freeze_authority_pub_key = 3;
  uint32 decimals = 4;
}

// Response containing InitialiseMint instruction
message InitialiseMintResponse {
  protosol.solana.transaction.v1.SolanaInstruction instruction = 1;
}

// Request to get current rent for token account
message GetCurrentMinRentForTokenAccountRequest {
  // No parameters needed - uses fixed Mint::LEN size
}

// Response with current rent amount
message GetCurrentMinRentForTokenAccountResponse {
  uint64 lamports = 1;
}

// Request to parse mint account
message ParseMintRequest {
  string account_address = 1;
}

// Response with parsed mint data
message ParseMintResponse {
  MintInfo mint = 1;
}

// Structured mint account information
message MintInfo {
  string mint_authority_pub_key = 1;
  string freeze_authority_pub_key = 2;
  uint32 decimals = 3;
  string supply = 4;
  bool is_initialized = 5;
}