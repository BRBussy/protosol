{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardbussy/Projects/github.com/BRBussy/protosol/ui/src/components/ProtoSolDashboard.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\n\n// Temporary mock for ProtoSol API until workspace is resolved\nconst mockProtoSolApi = {\n  VERSION: '1.0.0',\n  SDK_NAME: 'ProtoSol SDK (Mock)'\n}\n\ninterface DashboardState {\n  sdkVersion: string\n  sdkName: string\n  currentTime: string\n  connectionStatus: 'connecting' | 'connected' | 'disconnected'\n}\n\nexport function ProtoSolDashboard() {\n  const [state, setState] = useState<DashboardState>({\n    sdkVersion: 'Loading...',\n    sdkName: 'Loading...',\n    currentTime: '--:--:--',\n    connectionStatus: 'connecting'\n  })\n\n  const [keypair, setKeypair] = useState<{ publicKey: string; privateKey: string } | null>(null)\n\n  useEffect(() => {\n    // Initialize SDK information\n    const timerId = setTimeout(() => {\n      setState(prev => ({\n        ...prev,\n        sdkVersion: mockProtoSolApi.VERSION,\n        sdkName: mockProtoSolApi.SDK_NAME,\n        connectionStatus: 'connected'\n      }))\n    }, 500) // Add a small delay to simulate loading\n\n    // Update current time every second\n    const timeInterval = setInterval(() => {\n      setState(prev => ({\n        ...prev,\n        currentTime: new Date().toLocaleTimeString()\n      }))\n    }, 1000)\n\n    return () => {\n      clearTimeout(timerId)\n      clearInterval(timeInterval)\n    }\n  }, [])\n\n  const generateKeypair = () => {\n    // This would use the ProtoSol API to generate a keypair\n    // For now, we'll simulate it\n    setKeypair({\n      publicKey: '11111111111111111111111111111112', // Example Solana pubkey\n      privateKey: 'secret-private-key-example'\n    })\n  }\n\n  const getStatusColor = (status: DashboardState['connectionStatus']) => {\n    switch (status) {\n      case 'connected': return 'text-green-600 bg-green-100'\n      case 'connecting': return 'text-yellow-600 bg-yellow-100'\n      case 'disconnected': return 'text-red-600 bg-red-100'\n    }\n  }\n\n  const getStatusIcon = (status: DashboardState['connectionStatus']) => {\n    switch (status) {\n      case 'connected': return 'ðŸŸ¢'\n      case 'connecting': return 'ðŸŸ¡'\n      case 'disconnected': return 'ðŸ”´'\n    }\n  }\n\n  return (\n    <div className=\"bg-white rounded-2xl shadow-xl p-8 max-w-4xl mx-auto\">\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-3xl font-bold text-slate-900 mb-2\">\n          ProtoSol SDK Dashboard\n        </h2>\n        <p className=\"text-slate-600\">\n          Running the latest ProtoSol SDK with Next.js 15\n        </p>\n      </div>\n\n      <div className=\"grid md:grid-cols-2 gap-8 mb-8\">\n        {/* SDK Information */}\n        <div className=\"space-y-4\">\n          <h3 className=\"text-xl font-semibold text-slate-800 mb-4\">\n            SDK Information\n          </h3>\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between items-center p-3 bg-slate-50 rounded-lg\">\n              <span className=\"font-medium text-slate-700\">SDK Name:</span>\n              <span className=\"text-slate-900 font-mono\">{state.sdkName}</span>\n            </div>\n            <div className=\"flex justify-between items-center p-3 bg-slate-50 rounded-lg\">\n              <span className=\"font-medium text-slate-700\">Version:</span>\n              <span className=\"text-slate-900 font-mono\">v{state.sdkVersion}</span>\n            </div>\n            <div className=\"flex justify-between items-center p-3 bg-slate-50 rounded-lg\">\n              <span className=\"font-medium text-slate-700\">Time:</span>\n              <span className=\"text-slate-900 font-mono\">{state.currentTime}</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Connection Status */}\n        <div className=\"space-y-4\">\n          <h3 className=\"text-xl font-semibold text-slate-800 mb-4\">\n            System Status\n          </h3>\n          <div className=\"p-4 bg-slate-50 rounded-lg\">\n            <div className=\"flex items-center justify-between mb-3\">\n              <span className=\"font-medium text-slate-700\">SDK Connection:</span>\n              <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(state.connectionStatus)}`}>\n                {getStatusIcon(state.connectionStatus)} {state.connectionStatus}\n              </span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span className=\"font-medium text-slate-700\">Next.js:</span>\n              <span className=\"px-2 py-1 rounded-full text-xs font-medium text-green-600 bg-green-100\">\n                ðŸŸ¢ Running (v15)\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Interactive Demo Section */}\n      <div className=\"border-t border-slate-200 pt-8\">\n        <h3 className=\"text-xl font-semibold text-slate-800 mb-4\">\n          Interactive Demo\n        </h3>\n        <div className=\"space-y-4\">\n          <div className=\"flex gap-4 items-center\">\n            <button\n              onClick={generateKeypair}\n              className=\"px-6 py-3 bg-gradient-to-r from-blue-600 to-indigo-600 text-white font-medium rounded-lg hover:from-blue-700 hover:to-indigo-700 transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n            >\n              Generate Keypair\n            </button>\n            <div className=\"text-sm text-slate-600\">\n              Demo ProtoSol SDK integration\n            </div>\n          </div>\n\n          {keypair && (\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 animate-fade-in\">\n              <div className=\"flex items-center mb-2\">\n                <span className=\"text-green-700 font-medium\">âœ“ Keypair Generated</span>\n              </div>\n              <div className=\"space-y-2 text-sm font-mono text-slate-700\">\n                <div>\n                  <span className=\"font-medium text-slate-600\">Public Key:</span>{' '}\n                  <span className=\"bg-white px-2 py-1 rounded border\">{keypair.publicKey}</span>\n                </div>\n                <div>\n                  <span className=\"font-medium text-slate-600\">Private Key:</span>{' '}\n                  <span className=\"bg-white px-2 py-1 rounded border\">â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢</span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"border-t border-slate-200 pt-8 mt-8\">\n        <div className=\"text-center text-slate-500\">\n          <p className=\"text-sm mb-2\">\n            This is a modern Next.js 15 App Router application using the ProtoSol TypeScript SDK.\n          </p>\n          <p className=\"text-xs\">\n            Built with TypeScript, Tailwind CSS, and the latest web technologies.\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["file:///Users/bernardbussy/Projects/github.com/BRBussy/protosol/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}}]
}